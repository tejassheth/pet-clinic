plugins {
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id "io.freefair.lombok" version "4.1.4"
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id "java"
    id "idea"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url "https://repo.spring.io/release" }
    maven { url 'https://repo.spring.io/snapshot' }
}

allprojects{
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: "io.freefair.lombok"

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    group 'org.learn'
    version '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }
    dependencies {
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compile project(':pet-clinic-web')
    testCompile project(':pet-clinic-web')
}

jar {
    enabled = true
}

springBoot {
    mainClassName = 'org.learn.petclinic.PetClinicApplication'
}
test {
    dependsOn 'cleanTest'
    useJUnitPlatform()
    println("Testing..............")
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)")
    }
}
